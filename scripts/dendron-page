#!/bin/bash

. rabot-utils
if [ "$?" -ne "0" ]; then
  echo "$0: Error while sourcing rabot-utils" >&2
  exit 1
fi

function showHelp
{
cat << DOCSTRING
Usage: $(basename "$0") INPUTFILE OUTPUTFILE

'$(basename "$0")' converts tha AsciiDoc file INPUTFILE
to the HTML file OUTPUTFILE.

If the parent directory of OUTPUTFILE doesn't exist, it
will be created.

If a file named 'iattribs.txt' exists in the same directory
as INPUTFILE, or in one of its parent directories higher
up the path hierarchy, every attribute defined in it
will also be defined when converting INPUTFILE.
The attributes defined in the 'iattribs.txt' file that is
highest up the hierarchy will be defined first, and the ones
'lowest' last. This way, attributes defined 'lower' can
override 'higher' ones.

If a file named 'attribs.txt' exists in the same directory
as INPUTFILE, every attribute defined in it will also be
defined when converting INPUTFILE.
DOCSTRING
}

checkForHelp $1
minNumArgs 2 $#

require asciidoc

try test -f "$1"
inputFile="$(readlink -f $1)"

outputDir="$(dirname $2)"
try mkdir -p "$outputDir"

outputFile="$(readlink -f $2)"
outputDir="$(readlink -f "$outputDir")"
try test -d "$outputDir"

inputDir="$(dirname $inputFile)"

dendronDir="$(readlink -f "$(dirname "$0")/..")"

configFiles=(-f "${dendronDir}/conf/page.conf")

currentDir="$inputDir"
unset attributes
until [ "$(trimTrailingSlashes "$currentDir")" = "/" ]; do

    unset iattributes

    if [ -f "${currentDir}/iattribs.txt" ]; then

        while read nameValue; do

            nameValue="$(trimOuterWhitespace "$nameValue")"

            if [ -n "$nameValue" ]; then
                iattributes=("${iattributes[@]}" -a "$nameValue")
            fi

        done <"${currentDir}/iattribs.txt"

    fi

    attributes=("${iattributes[@]}" "${attributes[@]}")
    currentDir="$(dirname "$currentDir")"

done

if [ -f "${inputDir}/attribs.txt" ]; then
    while read nameValue; do
        attributes=(${attributes[@]} -a "$nameValue")
    done <"${inputDir}/attribs.txt"
fi

cmd=(asciidoc --backend=html5 --doctype=article -o "$outputFile" ${attributes[@]} ${configFiles[@]} "$inputFile")

echo Command executed:
echo ${cmd[@]}

${cmd[@]}
